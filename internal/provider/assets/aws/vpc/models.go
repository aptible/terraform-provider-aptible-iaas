package vpc

import (
	"github.com/hashicorp/terraform-plugin-framework/tfsdk"
	"github.com/hashicorp/terraform-plugin-framework/types"

	cloud_api_client "github.com/aptible/cloud-api-clients/clients/go"
)

// TODO - autogenerated
type VPC struct {
	Id             types.String `tfsdk:"id" json:"id"`
	AssetPlatform  types.String `tfsdk:"asset_platform" json:"asset_platform"`
	AssetType      types.String `tfsdk:"asset_type" json:"asset_type"`
	AssetVersion   types.String `tfsdk:"asset_version" json:"asset_version"`
	EnvironmentId  types.String `tfsdk:"environment_id" json:"environment_id"`
	OrganizationId types.String `tfsdk:"organization_id" json:"organization_id"`
	Status         types.String `tfsdk:"status" json:"status"`

	Name        types.String `tfsdk:"name" json:"name"`
	Description types.String `tfsdk:"description" json:"description"`
}

// TODO - autogenerated  (hence common fields, don't be alarmed at that)
// TODO - freeze below maps with immutable or freeze libraries
var AssetSchema = map[string]tfsdk.Attribute{
	"id": {
		Description: "A valid asset id",
		Type:        types.StringType,
		Computed:    true,
	},
	"status": {
		Type:     types.StringType,
		Computed: true,
	},

	"environment_id": {
		Description: "A valid environment id",
		Type:        types.StringType,
		Required:    true,
	},
	"organization_id": {
		Description: "A valid organization id",
		Type:        types.StringType,
		Required:    true,
	},
	"asset_platform": {
		Type:     types.StringType,
		Required: true,
	},
	"asset_type": {
		Type:     types.StringType,
		Required: true,
	},
	"asset_version": {
		Type:     types.StringType,
		Required: true,
	},
	"name": {
		Type:     types.StringType,
		Required: true,
	},
	"description": {
		Type:     types.StringType,
		Optional: true,
	},
}

func safeString(val interface{}) string {
	switch data := val.(type) {
	case string:
		return data
	default:
		return ""
	}
}

func GenerateResourceFromAssetOutput(output *cloud_api_client.AssetOutput) (*VPC, error) {
	vpc := &VPC{
		Id:             types.String{Value: output.Id},
		AssetPlatform:  types.String{Value: "aws"},
		AssetType:      types.String{Value: "vpc"},
		AssetVersion:   types.String{Value: output.AssetVersion},
		EnvironmentId:  types.String{Value: output.Environment.Id},
		OrganizationId: types.String{Value: output.Environment.Organization.Id},
		Status:         types.String{Value: string(output.Status)},
		Name:           types.String{Value: output.CurrentAssetParameters.Data["name"].(string)},
		Description:    types.String{Value: safeString(output.CurrentAssetParameters.Data["description"])},
	}

	return vpc, nil
}
